const { cmd } = require('../command');
const axios = require('axios');
const FormData = require('form-data');
const fs = require('fs');
const path = require('path');

cmd({
    pattern: "cdn",
    alias: ["upload", "store"],
    desc: "Upload replied file to Bandaheali CDN",
    category: "tools",
    react: "‚òÅÔ∏è",
    filename: __filename
}, async (conn, mek, m, { from }) => {
    try {
        const quoted = mek.quoted || m.quoted;
        if (!quoted) return mek.reply("‚ùå *Reply* to any image/video/document to upload it to CDN.");

        const qmsg = quoted.msg || quoted;
        const mediaPath = await conn.downloadAndSaveMediaMessage(qmsg);
        if (!mediaPath) return mek.reply("‚ùå Could not download the file. Try again!");

        const ext = path.extname(mediaPath) || ".bin";
        const filename = "WHITESHADOW~" + Math.floor(Math.random() * 100000) + ext;

        let form = new FormData();
        form.append("file", fs.createReadStream(mediaPath), { filename });

        let uploadMsg = await mek.reply("‚òÅÔ∏è Uploading file to *Bandaheali CDN*...");

        const { data } = await axios.post("https://cdn-bandaheali.vercel.app/api/upload", form, {
            headers: form.getHeaders()
        });

        fs.unlinkSync(mediaPath);

        if (data?.file?.url) {
            await uploadMsg.edit(`‚úÖ *File uploaded successfully!*\n\nüåê *CDN URL:*\n${data.file.url}`);
        } else {
            await uploadMsg.edit("‚ùå Upload failed.\n```" + JSON.stringify(data, null, 2) + "```");
        }

    } catch (error) {
        console.error("CDN Upload Error:", error);
        await mek.reply("‚ùå *Failed to upload file.*\nError: " + error.message);
    }
});
